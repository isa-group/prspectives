




<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>ui-utils/dist/ui-utils.min.js at gh-pages Â· angular-ui/ui-utils</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="angular-ui/ui-utils" name="twitter:title" /><meta content="ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)" name="twitter:description" /><meta content="https://0.gravatar.com/avatar/46d07086561c66caae16ce4d96bfd345?d=https%3A%2F%2Fidenticons.github.com%2F3902b30e7e55d0ffde5994d69bf8d4e6.png&amp;r=x&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://0.gravatar.com/avatar/46d07086561c66caae16ce4d96bfd345?d=https%3A%2F%2Fidenticons.github.com%2F3902b30e7e55d0ffde5994d69bf8d4e6.png&amp;r=x&amp;s=400" property="og:image" /><meta content="angular-ui/ui-utils" property="og:title" /><meta content="https://github.com/angular-ui/ui-utils" property="og:url" /><meta content="ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)" property="og:description" />

    <meta name="hostname" content="github-fe117-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 2.1.0p0-github-tcmalloc (87d8860372) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="5588D419:7188:758681:52F56833" name="octolytics-dimension-request_id" /><meta content="4688755" name="octolytics-actor-id" /><meta content="mleonrivas" name="octolytics-actor-login" /><meta content="fa8456250041304334c56af6d9eb2f549cf67913c6500a8e19b1a453d14ad48e" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="Ugz5uBTGfgIg7DPBS5VBkONgOq9oH1Otf990Wuk/mPg=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-f75ad12241fc0d2d7c903870c877da49bf925f5b.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-2e89649a029c98bf602f585cbda271fbb7997dc5.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://github.global.ssl.fastly.net/assets/frameworks-e8d62aa911c75d1d60662859d52c3cf1232675e6.js" type="text/javascript"></script>
      <script async="async" defer="defer" src="https://github.global.ssl.fastly.net/assets/github-88e7902214e0a535c520b2a218960b230a20ebc7.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="e509bc8eaf21e8b750c9c111e5efec6e">

        <link data-pjax-transient rel='permalink' href='/angular-ui/ui-utils/blob/880185f91a56aba12fc8496f07b078001a19920e/dist/ui-utils.min.js'>

  <meta name="description" content="ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)" />

  <meta content="1530011" name="octolytics-dimension-user_id" /><meta content="angular-ui" name="octolytics-dimension-user_login" /><meta content="8419933" name="octolytics-dimension-repository_id" /><meta content="angular-ui/ui-utils" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="8419933" name="octolytics-dimension-repository_network_root_id" /><meta content="angular-ui/ui-utils" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/angular-ui/ui-utils/commits/gh-pages.atom" rel="alternate" title="Recent Commits to ui-utils:gh-pages" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" class="notification-indicator tooltipped downwards" data-gotokey="n" title="You have no unread notifications">
        <span class="mail-status all-read"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="mleonrivas"
      data-repo="angular-ui/ui-utils"
      data-branch="gh-pages"
      data-sha="c0873e998a27636ad7e3d80c93aa1b7e3556e028"
  >

    <input type="hidden" name="nwo" value="angular-ui/ui-utils" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/mleonrivas" class="name">
        <img alt="mleonrivas" height="20" src="https://1.gravatar.com/avatar/a60cef2d8d5cbd0b3fdb7c9c100f00b4?d=https%3A%2F%2Fidenticons.github.com%2Fd67f65aae21c28ad53cbfcaa49ec9497.png&amp;r=x&amp;s=140" width="20" /> mleonrivas
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped downwards" title="Create new..." aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped downwards"
        aria-label="Account settings "
        title="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" title="Sign out" aria-label="Sign out">
        <span class="octicon octicon-log-out"></span>
      </a>
    </li>

  </ul>



<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="angular-ui/ui-utils">This repository</span>
    </li>
      <li>
        <a href="/angular-ui/ui-utils/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

      




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="Ugz5uBTGfgIg7DPBS5VBkONgOq9oH1Otf990Wuk/mPg=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="8419933" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/angular-ui/ui-utils/watchers">
        71
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">
    <a href="/angular-ui/ui-utils/unstar"
      class="minibutton with-count js-toggler-target star-button starred upwards"
      title="Unstar this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/angular-ui/ui-utils/star"
      class="minibutton with-count js-toggler-target star-button unstarred upwards"
      title="Star this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/angular-ui/ui-utils/stargazers">
        485
      </a>
  </div>

  </li>


        <li>
          <a href="/angular-ui/ui-utils/fork" class="minibutton with-count js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="facebox nofollow">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/angular-ui/ui-utils/network" class="social-count">342</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/angular-ui" class="url fn" itemprop="url" rel="author"><span itemprop="title">angular-ui</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/angular-ui/ui-utils" class="js-current-repository js-repo-home-link">ui-utils</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      

      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped leftwards" title="Code">
        <a href="/angular-ui/ui-utils/tree/gh-pages" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /angular-ui/ui-utils/tree/gh-pages">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/angular-ui/ui-utils/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /angular-ui/ui-utils/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>71</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests">
        <a href="/angular-ui/ui-utils/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /angular-ui/ui-utils/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>26</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/angular-ui/ui-utils/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /angular-ui/ui-utils/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/angular-ui/ui-utils/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /angular-ui/ui-utils/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/angular-ui/ui-utils/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /angular-ui/ui-utils/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/angular-ui/ui-utils.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/angular-ui/ui-utils.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:angular-ui/ui-utils.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:angular-ui/ui-utils.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/angular-ui/ui-utils" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/angular-ui/ui-utils" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" title="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>


  <a href="github-windows://openRepo/https://github.com/angular-ui/ui-utils" class="minibutton sidebar-button">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/angular-ui/ui-utils/archive/gh-pages.zip"
                   class="minibutton sidebar-button"
                   title="Download this repository as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:1ccf58118328de8feba6bb25eb497387 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/angular-ui/ui-utils/find/gh-pages" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="gh-pages"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">gh-pages</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/alias/dist/ui-utils.min.js"
                 data-name="alias"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="alias">alias</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/angular1.2.x/dist/ui-utils.min.js"
                 data-name="angular1.2.x"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="angular1.2.x">angular1.2.x</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower/dist/ui-utils.min.js"
                 data-name="bower"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower">bower</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-alias/dist/ui-utils.min.js"
                 data-name="bower-alias"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-alias">bower-alias</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-event/dist/ui-utils.min.js"
                 data-name="bower-event"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-event">bower-event</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-format/dist/ui-utils.min.js"
                 data-name="bower-format"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-format">bower-format</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-highlight/dist/ui-utils.min.js"
                 data-name="bower-highlight"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-highlight">bower-highlight</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-ie-shiv/dist/ui-utils.min.js"
                 data-name="bower-ie-shiv"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-ie-shiv">bower-ie-shiv</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-include/dist/ui-utils.min.js"
                 data-name="bower-include"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-include">bower-include</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-indeterminate/dist/ui-utils.min.js"
                 data-name="bower-indeterminate"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-indeterminate">bower-indeterminate</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-inflector/dist/ui-utils.min.js"
                 data-name="bower-inflector"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-inflector">bower-inflector</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-jq/dist/ui-utils.min.js"
                 data-name="bower-jq"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-jq">bower-jq</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-keypress/dist/ui-utils.min.js"
                 data-name="bower-keypress"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-keypress">bower-keypress</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-mask/dist/ui-utils.min.js"
                 data-name="bower-mask"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-mask">bower-mask</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-reset/dist/ui-utils.min.js"
                 data-name="bower-reset"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-reset">bower-reset</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-route/dist/ui-utils.min.js"
                 data-name="bower-route"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-route">bower-route</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-scrollfix/dist/ui-utils.min.js"
                 data-name="bower-scrollfix"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-scrollfix">bower-scrollfix</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-showhide/dist/ui-utils.min.js"
                 data-name="bower-showhide"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-showhide">bower-showhide</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-unique/dist/ui-utils.min.js"
                 data-name="bower-unique"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-unique">bower-unique</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/bower-validate/dist/ui-utils.min.js"
                 data-name="bower-validate"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="bower-validate">bower-validate</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/filter/dist/ui-utils.min.js"
                 data-name="filter"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="filter">filter</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/ft-grunt-build-only/dist/ui-utils.min.js"
                 data-name="ft-grunt-build-only"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="ft-grunt-build-only">ft-grunt-build-only</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/gh-pages/dist/ui-utils.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/master/dist/ui-utils.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/blob/ui-i18n/dist/ui-utils.min.js"
                 data-name="ui-i18n"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="ui-i18n">ui-i18n</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/validate-0.1.1/dist/ui-utils.min.js"
                 data-name="validate-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="validate-0.1.1">validate-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/validate-0.1.0/dist/ui-utils.min.js"
                 data-name="validate-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="validate-0.1.0">validate-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/v0.1.1/dist/ui-utils.min.js"
                 data-name="v0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.1.1">v0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/v0.1.0/dist/ui-utils.min.js"
                 data-name="v0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.1.0">v0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/v0.0.4/dist/ui-utils.min.js"
                 data-name="v0.0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.0.4">v0.0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/v0.0.3/dist/ui-utils.min.js"
                 data-name="v0.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.0.3">v0.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/v0.0.2/dist/ui-utils.min.js"
                 data-name="v0.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.0.2">v0.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/v0.0.1/dist/ui-utils.min.js"
                 data-name="v0.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.0.1">v0.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/unique-0.1.1/dist/ui-utils.min.js"
                 data-name="unique-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="unique-0.1.1">unique-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/unique-0.1.0/dist/ui-utils.min.js"
                 data-name="unique-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="unique-0.1.0">unique-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/src0.1.1/dist/ui-utils.min.js"
                 data-name="src0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="src0.1.1">src0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/src0.1.0/dist/ui-utils.min.js"
                 data-name="src0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="src0.1.0">src0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/showhide-0.1.1/dist/ui-utils.min.js"
                 data-name="showhide-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="showhide-0.1.1">showhide-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/showhide-0.1.0/dist/ui-utils.min.js"
                 data-name="showhide-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="showhide-0.1.0">showhide-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/scrollfix-0.1.1/dist/ui-utils.min.js"
                 data-name="scrollfix-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="scrollfix-0.1.1">scrollfix-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/scrollfix-0.1.0/dist/ui-utils.min.js"
                 data-name="scrollfix-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="scrollfix-0.1.0">scrollfix-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/route-0.1.1/dist/ui-utils.min.js"
                 data-name="route-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="route-0.1.1">route-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/route-0.1.0/dist/ui-utils.min.js"
                 data-name="route-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="route-0.1.0">route-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/reset-0.1.1/dist/ui-utils.min.js"
                 data-name="reset-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="reset-0.1.1">reset-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/reset-0.1.0/dist/ui-utils.min.js"
                 data-name="reset-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="reset-0.1.0">reset-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/mask-0.1.1/dist/ui-utils.min.js"
                 data-name="mask-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="mask-0.1.1">mask-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/mask-0.1.0/dist/ui-utils.min.js"
                 data-name="mask-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="mask-0.1.0">mask-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/keypress-0.1.1/dist/ui-utils.min.js"
                 data-name="keypress-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="keypress-0.1.1">keypress-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/keypress-0.1.0/dist/ui-utils.min.js"
                 data-name="keypress-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="keypress-0.1.0">keypress-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/jq-0.1.1/dist/ui-utils.min.js"
                 data-name="jq-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="jq-0.1.1">jq-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/jq-0.1.0/dist/ui-utils.min.js"
                 data-name="jq-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="jq-0.1.0">jq-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/inflector-0.1.1/dist/ui-utils.min.js"
                 data-name="inflector-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="inflector-0.1.1">inflector-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/inflector-0.1.0/dist/ui-utils.min.js"
                 data-name="inflector-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="inflector-0.1.0">inflector-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/indeterminate-0.1.1/dist/ui-utils.min.js"
                 data-name="indeterminate-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="indeterminate-0.1.1">indeterminate-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/indeterminate-0.1.0/dist/ui-utils.min.js"
                 data-name="indeterminate-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="indeterminate-0.1.0">indeterminate-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/include-0.1.1/dist/ui-utils.min.js"
                 data-name="include-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="include-0.1.1">include-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/include-0.1.0/dist/ui-utils.min.js"
                 data-name="include-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="include-0.1.0">include-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/ie-shiv-0.1.1/dist/ui-utils.min.js"
                 data-name="ie-shiv-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="ie-shiv-0.1.1">ie-shiv-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/ie-shiv-0.1.0/dist/ui-utils.min.js"
                 data-name="ie-shiv-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="ie-shiv-0.1.0">ie-shiv-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/highlight-0.1.1/dist/ui-utils.min.js"
                 data-name="highlight-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="highlight-0.1.1">highlight-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/highlight-0.1.0/dist/ui-utils.min.js"
                 data-name="highlight-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="highlight-0.1.0">highlight-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/format-0.1.1/dist/ui-utils.min.js"
                 data-name="format-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="format-0.1.1">format-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/format-0.1.0/dist/ui-utils.min.js"
                 data-name="format-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="format-0.1.0">format-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/event-0.1.1/dist/ui-utils.min.js"
                 data-name="event-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="event-0.1.1">event-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/event-0.1.0/dist/ui-utils.min.js"
                 data-name="event-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="event-0.1.0">event-0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/alias-0.1.1/dist/ui-utils.min.js"
                 data-name="alias-0.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="alias-0.1.1">alias-0.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/angular-ui/ui-utils/tree/alias-0.1.0/dist/ui-utils.min.js"
                 data-name="alias-0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="alias-0.1.0">alias-0.1.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular-ui/ui-utils/tree/gh-pages" data-branch="gh-pages" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">ui-utils</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular-ui/ui-utils/tree/gh-pages/dist" data-branch="gh-pages" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">dist</span></a></span><span class="separator"> / </span><strong class="final-path">ui-utils.min.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="dist/ui-utils.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://1.gravatar.com/avatar/7644dc16702896486463e095a918d7b6?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png&amp;r=x&amp;s=140" width="24" />
    <span class="author"><span rel="author">AngularUI (via TravisCI)</span></span>
    <time class="js-relative-date" data-title-format="YYYY-MM-DD HH:mm:ss" datetime="2014-02-05T10:51:04-08:00" title="2014-02-05 10:51:04">February 05, 2014</time>
    <div class="commit-title">
        <a href="/angular-ui/ui-utils/commit/880185f91a56aba12fc8496f07b078001a19920e" class="message" data-pjax="true" title="Travis commit : build 258">Travis commit : build 258</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>0</strong> contributors</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
      </ul>
    </div>
  </div>

<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>7 lines (7 sloc)</span>
        <span>23.346 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped leftwards"
               href="github-windows://openRepo/https://github.com/angular-ui/ui-utils?branch=gh-pages&amp;filepath=dist%2Fui-utils.min.js" title="Open this file in GitHub for Windows">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped upwards js-update-url-with-hash"
                   title="Clicking this button will automatically fork this project so you can edit the file"
                   href="/angular-ui/ui-utils/edit/gh-pages/dist/ui-utils.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/angular-ui/ui-utils/raw/gh-pages/dist/ui-utils.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/angular-ui/ui-utils/blame/gh-pages/dist/ui-utils.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/angular-ui/ui-utils/commits/gh-pages/dist/ui-utils.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger empty-icon tooltipped downwards"
             href="/angular-ui/ui-utils/delete/gh-pages/dist/ui-utils.min.js"
             title="Fork this project and delete file"
             data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/**</span></div><div class='line' id='LC2'><span class="cm"> * angular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)</span></div><div class='line' id='LC3'><span class="cm"> * @version v0.1.1 - 2014-02-05</span></div><div class='line' id='LC4'><span class="cm"> * @link http://angular-ui.github.com</span></div><div class='line' id='LC5'><span class="cm"> * @license MIT License, http://www.opensource.org/licenses/MIT</span></div><div class='line' id='LC6'><span class="cm"> */</span></div><div class='line' id='LC7'><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.alias&quot;</span><span class="p">,[]).</span><span class="nx">config</span><span class="p">([</span><span class="s2">&quot;$compileProvider&quot;</span><span class="p">,</span><span class="s2">&quot;uiAliasConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{},</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">template</span><span class="o">:</span><span class="nx">b</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">})})}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.event&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiEvent&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiEvent</span><span class="p">);</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">$event</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">$params</span><span class="o">:</span><span class="nx">c</span><span class="p">}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$$phase</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">$apply</span><span class="p">()})})}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.format&quot;</span><span class="p">,[]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;format&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">c</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\$([0-9]+)/g</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.highlight&quot;</span><span class="p">,[]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;highlight&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;&lt;span class=&quot;ui-match&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;gi&quot;</span><span class="p">),</span><span class="s1">&#39;&lt;span class=&quot;ui-match&quot;&gt;$&amp;&lt;/span&gt;&#39;</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.include&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiInclude&quot;</span><span class="p">,[</span><span class="s2">&quot;$http&quot;</span><span class="p">,</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="s2">&quot;$anchorScroll&quot;</span><span class="p">,</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;ECA&quot;</span><span class="p">,</span><span class="nx">terminal</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">uiInclude</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">fragment</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">onload</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">autoscroll</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=++</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">o</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">o</span><span class="p">,{</span><span class="nx">cache</span><span class="o">:</span><span class="nx">b</span><span class="p">}).</span><span class="nx">success</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">===</span><span class="nx">m</span><span class="p">){</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$new</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">p</span><span class="o">?</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s2">&quot;&lt;div/&gt;&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s2">&quot;&lt;div/&gt;&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">contents</span><span class="p">(),</span><span class="nx">f</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">)(</span><span class="nx">l</span><span class="p">),</span><span class="o">!</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span><span class="nx">j</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s2">&quot;$includeContentLoaded&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">i</span><span class="p">)}}).</span><span class="nx">error</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="o">===</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">()})</span><span class="o">:</span><span class="nx">n</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="nx">e</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">k</span><span class="p">)}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.indeterminate&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiIndeterminate&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;checkbox&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiIndeterminate</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">indeterminate</span><span class="o">=!!</span><span class="nx">a</span><span class="p">})}</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.inflector&quot;</span><span class="p">,[]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;inflector&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^([a-z])|\s+([a-z])/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()})}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[A-Z]/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">+</span><span class="nx">a</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">humanize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">))},</span><span class="nx">underscore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">+</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="s2">&quot;_&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">)},</span><span class="nx">variable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">+</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)).</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;humanize&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.jq&quot;</span><span class="p">,[]).</span><span class="nx">value</span><span class="p">(</span><span class="s2">&quot;uiJqConfig&quot;</span><span class="p">,{}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiJq&quot;</span><span class="p">,[</span><span class="s2">&quot;uiJqConfig&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiJq</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;ui-jq: The &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiJq</span><span class="o">+</span><span class="s1">&#39;&quot; function does not exist&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiJq</span><span class="p">];</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="nx">b</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiJq</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiOptions</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiOptions</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">])))</span><span class="o">:</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="nx">d</span><span class="p">.</span><span class="nx">ngModel</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;select,input,textarea&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;change&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">)}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiRefresh</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiRefresh</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">()}),</span><span class="nx">f</span><span class="p">()}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">,[]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;keypressHelper&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="mi">8</span><span class="o">:</span><span class="s2">&quot;backspace&quot;</span><span class="p">,</span><span class="mi">9</span><span class="o">:</span><span class="s2">&quot;tab&quot;</span><span class="p">,</span><span class="mi">13</span><span class="o">:</span><span class="s2">&quot;enter&quot;</span><span class="p">,</span><span class="mi">27</span><span class="o">:</span><span class="s2">&quot;esc&quot;</span><span class="p">,</span><span class="mi">32</span><span class="o">:</span><span class="s2">&quot;space&quot;</span><span class="p">,</span><span class="mi">33</span><span class="o">:</span><span class="s2">&quot;pageup&quot;</span><span class="p">,</span><span class="mi">34</span><span class="o">:</span><span class="s2">&quot;pagedown&quot;</span><span class="p">,</span><span class="mi">35</span><span class="o">:</span><span class="s2">&quot;end&quot;</span><span class="p">,</span><span class="mi">36</span><span class="o">:</span><span class="s2">&quot;home&quot;</span><span class="p">,</span><span class="mi">37</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="mi">38</span><span class="o">:</span><span class="s2">&quot;up&quot;</span><span class="p">,</span><span class="mi">39</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="mi">40</span><span class="o">:</span><span class="s2">&quot;down&quot;</span><span class="p">,</span><span class="mi">45</span><span class="o">:</span><span class="s2">&quot;insert&quot;</span><span class="p">,</span><span class="mi">46</span><span class="o">:</span><span class="s2">&quot;delete&quot;</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[];</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="s2">&quot;ui&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">)]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">expression</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">keys</span><span class="o">:</span><span class="p">{}},</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)})}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=!</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">),</span><span class="nx">f</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">altKey</span><span class="p">,</span><span class="nx">g</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">,</span><span class="nx">h</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;</span><span class="s2">&quot;keypress&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&gt;=</span><span class="mi">97</span><span class="o">&amp;&amp;</span><span class="mi">122</span><span class="o">&gt;=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">-=</span><span class="mi">32</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">j</span><span class="p">]]</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">[</span><span class="nx">j</span><span class="p">.</span><span class="nx">toString</span><span class="p">()],</span><span class="nx">k</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">meta</span><span class="p">,</span><span class="nx">l</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">alt</span><span class="p">,</span><span class="nx">m</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">ctrl</span><span class="p">,</span><span class="nx">n</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">shift</span><span class="p">;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">===</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">expression</span><span class="p">(</span><span class="nx">e</span><span class="p">,{</span><span class="nx">$event</span><span class="o">:</span><span class="nx">a</span><span class="p">})})})})}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiKeydown&quot;</span><span class="p">,[</span><span class="s2">&quot;keypressHelper&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiKeypress&quot;</span><span class="p">,[</span><span class="s2">&quot;keypressHelper&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;keypress&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiKeyup&quot;</span><span class="p">,[</span><span class="s2">&quot;keypressHelper&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;keyup&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.mask&quot;</span><span class="p">,[]).</span><span class="nx">value</span><span class="p">(</span><span class="s2">&quot;uiMaskConfig&quot;</span><span class="p">,{</span><span class="nx">maskDefinitions</span><span class="o">:</span><span class="p">{</span><span class="mi">9</span><span class="o">:</span><span class="sr">/\d/</span><span class="p">,</span><span class="nx">A</span><span class="o">:</span><span class="sr">/[a-zA-Z]/</span><span class="p">,</span><span class="s2">&quot;*&quot;</span><span class="o">:</span><span class="sr">/[a-zA-Z0-9]/</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiMask&quot;</span><span class="p">,[</span><span class="s2">&quot;uiMaskConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">priority</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;ngModel&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">N</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="p">(),</span><span class="nx">l</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">())</span><span class="o">:</span><span class="nx">j</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">D</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">N</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">())}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">N</span><span class="o">?</span><span class="p">(</span><span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">I</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">G</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;mask&quot;</span><span class="p">,</span><span class="nx">I</span><span class="p">),</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">p</span><span class="p">(</span><span class="nx">G</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">N</span><span class="o">?</span><span class="p">(</span><span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">I</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">G</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$viewValue</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">p</span><span class="p">(</span><span class="nx">G</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;mask&quot;</span><span class="p">,</span><span class="nx">I</span><span class="p">),</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">$error</span><span class="p">.</span><span class="nx">required</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;required&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">I</span><span class="o">?</span><span class="nx">G</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(){</span><span class="k">return</span> <span class="nx">N</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="p">(),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">P</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">,</span><span class="nx">P</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">Q</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;maxlength&quot;</span><span class="p">,</span><span class="nx">Q</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;maxlength&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$viewValue</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){</span><span class="nx">G</span><span class="o">=</span><span class="nx">K</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$modelValue</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">H</span><span class="o">=</span><span class="nx">J</span><span class="o">=</span><span class="nx">p</span><span class="p">(</span><span class="nx">G</span><span class="p">),</span><span class="nx">I</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">H</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxlength</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;maxlength&quot;</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">B</span><span class="p">[</span><span class="nx">B</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">,</span><span class="nx">D</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$viewValue</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(){</span><span class="nx">O</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mousedown mouseup&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;input keyup click focus&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">),</span><span class="nx">O</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(){</span><span class="nx">O</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;keyup&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="nx">w</span><span class="p">),</span><span class="nx">O</span><span class="o">=!</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">F</span><span class="o">:!</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">shift</span><span class="p">())}),</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;_&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">shift</span><span class="p">())</span><span class="o">:</span><span class="nx">b</span><span class="o">+=</span><span class="nx">d</span><span class="p">}),</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">placeholder</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;_&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(){</span><span class="k">return</span> <span class="nx">D</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[_]+/g</span><span class="p">,</span><span class="s2">&quot;_&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([^_]+)([a-zA-Z0-9])([^_])/g</span><span class="p">,</span><span class="s2">&quot;$1$2_$3&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="o">=</span><span class="p">[],</span><span class="nx">C</span><span class="o">=</span><span class="p">[],</span><span class="nx">D</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">R</span><span class="p">.</span><span class="nx">maskDefinitions</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">D</span><span class="o">+=</span><span class="nx">q</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">C</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">R</span><span class="p">.</span><span class="nx">maskDefinitions</span><span class="p">[</span><span class="nx">a</span><span class="p">]),</span><span class="nx">b</span><span class="o">++</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">F</span><span class="o">++</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">D</span><span class="o">+=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">++</span><span class="p">)})}</span><span class="nx">B</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">slice</span><span class="p">().</span><span class="nx">pop</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">E</span><span class="o">=</span><span class="nx">r</span><span class="p">(),</span><span class="nx">N</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(){</span><span class="nx">L</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="p">(</span><span class="nx">H</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}))}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;mousedown&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">v</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">v</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(){</span><span class="nx">M</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">v</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">which</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">16</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="mi">91</span><span class="o">!==</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="nx">J</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">K</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">L</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">m</span><span class="o">-</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">||</span><span class="nx">B</span><span class="p">.</span><span class="nx">slice</span><span class="p">().</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">t</span><span class="o">=</span><span class="nx">M</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">t</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">t</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">d</span><span class="o">&gt;=</span><span class="mi">37</span><span class="o">&amp;&amp;</span><span class="mi">40</span><span class="o">&gt;=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">shiftKey</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="mi">37</span><span class="o">===</span><span class="nx">d</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="mi">8</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;keyup&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">===</span><span class="nx">q</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="mi">46</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;keyup&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">q</span><span class="o">&amp;&amp;!</span><span class="nx">v</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="p">(</span><span class="nx">E</span><span class="o">||</span><span class="nx">F</span><span class="o">||</span><span class="s2">&quot;click&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">r</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="o">!</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">u</span><span class="o">||</span><span class="s2">&quot;click&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="s2">&quot;keyup&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="o">&amp;&amp;!</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">===</span><span class="nx">k</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">r</span><span class="o">&amp;&amp;!</span><span class="nx">x</span><span class="p">(</span><span class="nx">m</span><span class="p">);)</span><span class="nx">m</span><span class="o">--</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">===</span><span class="nx">B</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">m</span><span class="p">);)</span><span class="nx">m</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="p">)</span><span class="o">+</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">I</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">J</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">j</span><span class="p">)}),</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">&gt;=</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">--</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">?</span><span class="nx">s</span><span class="o">:</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">?</span><span class="nx">r</span><span class="o">:</span><span class="nx">m</span><span class="p">;</span><span class="o">!</span><span class="nx">x</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">m</span><span class="p">;)</span><span class="nx">m</span><span class="o">+=</span><span class="nx">H</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;(</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">||</span><span class="nx">w</span><span class="o">&amp;&amp;!</span><span class="nx">x</span><span class="p">(</span><span class="nx">n</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">++</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">m</span><span class="p">)}}}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">B</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectionStart</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">selectionStart</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">moveStart</span><span class="p">(</span><span class="s2">&quot;character&quot;</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="k">return</span> <span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSelectionRange</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">focus</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSelectionRange</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveEnd</span><span class="p">(</span><span class="s2">&quot;character&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveStart</span><span class="p">(</span><span class="s2">&quot;character&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">select</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectionStart</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectionEnd</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectionStart</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">text</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">O</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">placeholder</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxlength</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiOptions</span><span class="o">?</span><span class="p">(</span><span class="nx">R</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiOptions</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">R</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">R</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">?</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]));</span><span class="k">return</span> <span class="nx">b</span><span class="p">}(</span><span class="nx">b</span><span class="p">,</span><span class="nx">R</span><span class="p">[</span><span class="mi">0</span><span class="p">])))</span><span class="o">:</span><span class="nx">R</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;uiMask&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$formatters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parsers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mousedown mouseup&quot;</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="k">this</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Object</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">d</span><span class="o">!==</span><span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">!==-</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">)))),</span><span class="nx">d</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">})}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.reset&quot;</span><span class="p">,[]).</span><span class="nx">value</span><span class="p">(</span><span class="s2">&quot;uiResetConfig&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiReset&quot;</span><span class="p">,[</span><span class="s2">&quot;uiResetConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">),{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;ngModel&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s1">&#39;&lt;a class=&quot;ui-reset&quot; /&gt;&#39;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">wrap</span><span class="p">(</span><span class="s1">&#39;&lt;span class=&quot;ui-resetwrap&quot; /&gt;&#39;</span><span class="p">).</span><span class="nx">after</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiReset</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiReset</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$render</span><span class="p">()})})}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.route&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiRoute&quot;</span><span class="p">,[</span><span class="s2">&quot;$location&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;AC&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiRoute</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;uiRoute&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">ngHref</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;ngHref&quot;</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;uiRoute missing a route or href property on &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;href&quot;</span><span class="p">}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">)),(</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">)})()}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">)),(</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;$&quot;</span><span class="p">,[</span><span class="s2">&quot;i&quot;</span><span class="p">]);</span><span class="nx">i</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">()))})()}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">ngModel</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">routeModel</span><span class="o">||</span><span class="s2">&quot;$uiRoute&quot;</span><span class="p">).</span><span class="nx">assign</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;uiRoute&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">uiRoute</span><span class="o">?</span><span class="nx">h</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">uiRoute</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;uiRoute&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;ngHref&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">ngHref</span><span class="o">?</span><span class="nx">g</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">ngHref</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;ngHref&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;href&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">href</span><span class="p">)}</span><span class="nx">c</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$routeChangeSuccess&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="p">()}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$stateChangeSuccess&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="p">()})}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.scroll.jqlite&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.scroll&quot;</span><span class="p">]).</span><span class="nx">service</span><span class="p">(</span><span class="s2">&quot;jqLiteExtras&quot;</span><span class="p">,[</span><span class="s2">&quot;$log&quot;</span><span class="p">,</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">registerFor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">css</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">css</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">3</span><span class="o">!==</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="mi">8</span><span class="o">!==</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">style</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">alert</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">setInterval</span><span class="p">},</span><span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;scrollTop&quot;</span><span class="p">,</span><span class="s2">&quot;pageYOffset&quot;</span><span class="p">,</span><span class="s2">&quot;scrollLeft&quot;</span><span class="p">],</span><span class="nx">left</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;scrollLeft&quot;</span><span class="p">,</span><span class="s2">&quot;pageXOffset&quot;</span><span class="p">,</span><span class="s2">&quot;scrollTop&quot;</span><span class="p">]}[</span><span class="nx">b</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">h</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">)},</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">b</span><span class="p">)})</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/</span><span class="p">.</span><span class="nx">source</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;)(?!px)[a-z%]+$&quot;</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">left</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">pixelLeft</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">h</span><span class="p">),</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">b</span><span class="p">)}),</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">;</span><span class="k">return</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[{</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;clientHeight&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;clientWidth&quot;</span><span class="p">}[</span><span class="nx">b</span><span class="p">]],{</span><span class="nx">base</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">border</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">0</span><span class="p">})</span><span class="o">:</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="s2">&quot;Left&quot;</span><span class="p">,</span><span class="s2">&quot;Right&quot;</span><span class="p">],</span><span class="nx">height</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="s2">&quot;Top&quot;</span><span class="p">,</span><span class="s2">&quot;Bottom&quot;</span><span class="p">]}[</span><span class="nx">b</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="s2">&quot;padding&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">])</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="s2">&quot;padding&quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">])</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="s2">&quot;border&quot;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Width&quot;</span><span class="p">])</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="s2">&quot;border&quot;</span><span class="o">+</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Width&quot;</span><span class="p">])</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="s2">&quot;margin&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="s2">&quot;margin&quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,{</span><span class="nx">base</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="nx">p</span><span class="o">+</span><span class="nx">q</span><span class="p">,</span><span class="nx">border</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="nx">n</span><span class="o">+</span><span class="nx">o</span><span class="p">})},</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">base</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="p">{</span><span class="nx">base</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">base</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">padding</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">border</span><span class="p">,</span><span class="nx">outer</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">base</span><span class="p">,</span><span class="nx">outerfull</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">base</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">margin</span><span class="p">}[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">],(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">||</span><span class="kc">null</span><span class="o">===</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,{</span><span class="nx">base</span><span class="o">:</span><span class="nx">h</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">padding</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">border</span><span class="p">,</span><span class="nx">outer</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">outerfull</span><span class="o">:</span><span class="nx">h</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">padding</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">border</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">margin</span><span class="p">}[</span><span class="nx">c</span><span class="p">])},</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">({</span><span class="nx">before</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">contents</span><span class="p">(),</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;=</span><span class="mi">1</span><span class="o">?</span><span class="nx">h</span><span class="o">&gt;=</span><span class="nx">g</span><span class="o">:</span><span class="nx">g</span><span class="o">&gt;=</span><span class="nx">h</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="o">&gt;=</span><span class="mi">1</span><span class="o">?++</span><span class="nx">g</span><span class="o">:--</span><span class="nx">g</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="k">void</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">]).</span><span class="nx">after</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;invalid DOM structure &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">outerHTML</span><span class="p">)},</span><span class="nx">height</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;px&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="s2">&quot;base&quot;</span><span class="p">)},</span><span class="nx">outerHeight</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;outerfull&quot;</span><span class="o">:</span><span class="s2">&quot;outer&quot;</span><span class="p">)},</span><span class="nx">offset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">()),</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentWindow</span><span class="p">,{</span><span class="nx">top</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">left</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">)})</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">)},</span><span class="nx">scrollTop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">scrollLeft</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)}},</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">})}}}]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$log&quot;</span><span class="p">,</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;jqLiteExtras&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">registerFor</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.scroll&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;ngScrollViewport&quot;</span><span class="p">,[</span><span class="s2">&quot;$log&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">controller</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$element&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">}]}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;ngScroll&quot;</span><span class="p">,[</span><span class="s2">&quot;$log&quot;</span><span class="p">,</span><span class="s2">&quot;$injector&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;?^ngScrollViewport&quot;</span><span class="p">],</span><span class="nx">transclude</span><span class="o">:</span><span class="s2">&quot;element&quot;</span><span class="p">,</span><span class="nx">priority</span><span class="o">:</span><span class="mi">1</span><span class="nx">e3</span><span class="p">,</span><span class="nx">terminal</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">O</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">R</span><span class="p">,</span><span class="nx">S</span><span class="p">,</span><span class="nx">T</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">ngScroll</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^\s*(\w+)\s+in\s+(\w+)\s*$/</span><span class="p">),</span><span class="o">!</span><span class="nx">H</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;Expected ngScroll in form of &quot;item_ in _datasource_&quot; but got &quot;&#39;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">ngScroll</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">v</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">D</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">)},</span><span class="nx">u</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">v</span><span class="p">],</span><span class="o">!</span><span class="nx">D</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">v</span><span class="p">),</span><span class="o">!</span><span class="nx">D</span><span class="p">(</span><span class="nx">u</span><span class="p">)))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="nx">v</span><span class="o">+</span><span class="s2">&quot; is not a valid datasource&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">r</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">bufferSize</span><span class="o">||</span><span class="mi">10</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(.</span><span class="mi">1</span><span class="p">,</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">padding</span><span class="o">||</span><span class="p">.</span><span class="mi">1</span><span class="p">)},</span><span class="nx">O</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">scrollHeight</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="p">},</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">g</span><span class="p">(</span><span class="nx">R</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">$new</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">localName</span><span class="p">,</span><span class="s2">&quot;dl&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;ng-scroll directive does not support &lt;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">localName</span><span class="o">+</span><span class="s2">&quot;&gt; as a repeating tag: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">outerHTML</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;li&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="s2">&quot;tr&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nb">window</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="s2">&quot;overflow-y&quot;</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">}),</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;tr&quot;</span><span class="o">:</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s2">&quot;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;tr&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">paddingHeight</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">c</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s2">&quot;&lt;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&gt;&lt;/&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&gt;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">paddingHeight</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">c</span><span class="p">}},</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">[{</span><span class="nx">top</span><span class="o">:</span><span class="s2">&quot;before&quot;</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="s2">&quot;after&quot;</span><span class="p">}[</span><span class="nx">c</span><span class="p">]](</span><span class="nx">a</span><span class="p">),{</span><span class="nx">paddingHeight</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">paddingHeight</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">insert</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[{</span><span class="nx">top</span><span class="o">:</span><span class="s2">&quot;after&quot;</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="s2">&quot;before&quot;</span><span class="p">}[</span><span class="nx">c</span><span class="p">]](</span><span class="nx">b</span><span class="p">)}}},</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;top&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;bottom&quot;</span><span class="p">),</span><span class="nx">R</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">(),</span><span class="nx">k</span><span class="o">=</span><span class="p">{</span><span class="nx">viewport</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">topPadding</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">paddingHeight</span><span class="p">,</span><span class="nx">bottomPadding</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">paddingHeight</span><span class="p">,</span><span class="nx">append</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">insert</span><span class="p">,</span><span class="nx">prepend</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">insert</span><span class="p">,</span><span class="nx">bottomDataPos</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">O</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">paddingHeight</span><span class="p">()},</span><span class="nx">topDataPos</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">paddingHeight</span><span class="p">()}}}),</span><span class="nx">T</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">viewport</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">J</span><span class="o">=</span><span class="p">[],</span><span class="nx">x</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">loading</span><span class="o">||</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">E</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">:</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">a</span><span class="o">?++</span><span class="nx">d</span><span class="o">:--</span><span class="nx">d</span><span class="p">)</span><span class="nx">p</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">scope</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">(),</span><span class="nx">p</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">element</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="k">return</span> <span class="nx">p</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">)},</span><span class="nx">K</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">B</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">L</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">topPadding</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomPadding</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">J</span><span class="o">=</span><span class="p">[],</span><span class="nx">x</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">()</span><span class="o">+</span><span class="nx">T</span><span class="p">.</span><span class="nx">height</span><span class="p">()},</span><span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">()},</span><span class="nx">P</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomDataPos</span><span class="p">()</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">()</span><span class="o">+</span><span class="nx">q</span><span class="p">()},</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;(</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">g</span><span class="o">?</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">f</span><span class="o">:</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">element</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomDataPos</span><span class="p">()</span><span class="o">-</span><span class="nx">b</span><span class="o">-</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">o</span><span class="p">()</span><span class="o">+</span><span class="nx">q</span><span class="p">());</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">g</span><span class="o">?++</span><span class="nx">f</span><span class="o">:--</span><span class="nx">f</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">++</span><span class="p">,</span><span class="nx">x</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomPadding</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomPadding</span><span class="p">()</span><span class="o">+</span><span class="nx">b</span><span class="p">),</span><span class="nx">L</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">I</span><span class="o">-=</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;clipped off bottom &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; bottom padding &quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomPadding</span><span class="p">()))</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">Q</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">topDataPos</span><span class="p">()</span><span class="o">&gt;</span><span class="nx">S</span><span class="p">()</span><span class="o">-</span><span class="nx">q</span><span class="p">()},</span><span class="nx">t</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">topDataPos</span><span class="p">()</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">S</span><span class="p">()</span><span class="o">-</span><span class="nx">q</span><span class="p">());</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">+=</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">++</span><span class="p">,</span><span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">topPadding</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">topPadding</span><span class="p">()</span><span class="o">+</span><span class="nx">e</span><span class="p">),</span><span class="nx">L</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">B</span><span class="o">+=</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;clipped off top &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; top padding &quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">topPadding</span><span class="p">()))</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="o">||</span><span class="p">(</span><span class="nx">E</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">G</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)),</span><span class="mi">1</span><span class="o">===</span><span class="nx">J</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">z</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">$new</span><span class="p">(),</span><span class="nx">c</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">B</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">$index</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">$index</span><span class="o">--</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="nx">scope</span><span class="o">:</span><span class="nx">c</span><span class="p">},</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="o">===</span><span class="nx">I</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="o">-</span><span class="nx">B</span><span class="p">].</span><span class="nx">element</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">B</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">e</span><span class="p">))}),{</span><span class="nx">appended</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">wrapper</span><span class="o">:</span><span class="nx">e</span><span class="p">}},</span><span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomPadding</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomPadding</span><span class="p">()</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)))</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">topPadding</span><span class="p">()</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">topPadding</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">T</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">()</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)))},</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;top {actual=&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">topDataPos</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; visible from=&quot;</span><span class="o">+</span><span class="nx">S</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; bottom {visible through=&quot;</span><span class="o">+</span><span class="nx">o</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; actual=&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomDataPos</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">),</span><span class="nx">P</span><span class="p">()</span><span class="o">?</span><span class="nx">w</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">Q</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">()</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">c</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">appended</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrapper</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">()})</span><span class="o">:</span><span class="nx">f</span><span class="p">()},</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="mi">0</span><span class="o">===</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">E</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">G</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">P</span><span class="p">()</span><span class="o">?</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">u</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">x</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">bottomPadding</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;appended: requested &quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; records starting from &quot;</span><span class="o">+</span><span class="nx">I</span><span class="o">+</span><span class="s2">&quot; recieved: eof&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="o">++</span><span class="nx">I</span><span class="p">,</span><span class="nx">d</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;appended: requested &quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; received &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; buffer size &quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; first &quot;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot; next &quot;</span><span class="o">+</span><span class="nx">I</span><span class="p">)}</span><span class="k">return</span> <span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">)})</span><span class="o">:</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">Q</span><span class="p">()</span><span class="o">?</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">u</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">B</span><span class="o">-</span><span class="nx">r</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">n</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">topPadding</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;prepended: requested &quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; records starting from &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">B</span><span class="o">-</span><span class="nx">r</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; recieved: bof&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">g</span><span class="o">?</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">f</span><span class="o">:</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">g</span><span class="o">?++</span><span class="nx">f</span><span class="o">:--</span><span class="nx">f</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="o">--</span><span class="nx">B</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]));</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;prepended: requested &quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot; received &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; buffer size &quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot; first &quot;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot; next &quot;</span><span class="o">+</span><span class="nx">I</span><span class="p">)}</span><span class="k">return</span> <span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">)})},</span><span class="nx">M</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">$$phase</span><span class="o">||</span><span class="nx">E</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">$apply</span><span class="p">())},</span><span class="nx">T</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">M</span><span class="p">),</span><span class="nx">N</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">$$phase</span><span class="o">||</span><span class="nx">E</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">$apply</span><span class="p">())},</span><span class="nx">T</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;scroll&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">revision</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">K</span><span class="p">()}),</span><span class="nx">y</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">scope</span><span class="o">?</span><span class="nx">u</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">$new</span><span class="p">()</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">$new</span><span class="p">(),</span><span class="nx">f</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">y</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">(),</span><span class="nx">T</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">M</span><span class="p">),</span><span class="nx">T</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;scroll&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">)}),</span><span class="nx">y</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;update.items&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">scope</span><span class="p">)},</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">B</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">b</span><span class="o">-</span><span class="nx">B</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">scope</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="p">}),</span><span class="nx">y</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;delete.items&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">scope</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">L</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">c</span><span class="p">),</span><span class="nx">I</span><span class="o">--</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">c</span><span class="o">=++</span><span class="nx">i</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">g</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="k">else</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">B</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">L</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">B</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">B</span><span class="p">),</span><span class="nx">I</span><span class="o">--</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">c</span><span class="o">=++</span><span class="nx">j</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">$index</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">y</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;insert.item&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">q</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">scope</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">I</span><span class="o">++</span><span class="p">},</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">g</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="o">=++</span><span class="nx">h</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">)));</span><span class="k">return</span> <span class="nx">j</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">))}},</span><span class="nx">d</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">d</span><span class="o">=++</span><span class="nx">j</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">h</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="k">else</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">B</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)),</span><span class="nx">I</span><span class="o">++</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">d</span><span class="o">=++</span><span class="nx">k</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">$index</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">)})}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.scrollfix&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiScrollfix&quot;</span><span class="p">,[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^?uiScrollfixTarget&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">compatMode</span><span class="o">&amp;&amp;</span><span class="s2">&quot;BackCompat&quot;</span><span class="o">!==</span><span class="nb">document</span><span class="p">.</span><span class="nx">compatMode</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">}</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;ui-scrollfix&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-scrollfix&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;ui-scrollfix&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-scrollfix&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$element</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">?</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">=</span><span class="nx">g</span><span class="o">-</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;+&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">))))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;scroll&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;scroll&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">)})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiScrollfixTarget&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">controller</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;$element&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="o">=</span><span class="nx">a</span><span class="p">}]}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.showhide&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiShow&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiShow</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-show&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-show&quot;</span><span class="p">)})}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiHide&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiHide</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-hide&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-hide&quot;</span><span class="p">)})}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiToggle&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiToggle</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-hide&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-show&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-show&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-hide&quot;</span><span class="p">)})}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.unique&quot;</span><span class="p">,[]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;unique&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===!</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">c</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]),</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">))){</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">b</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.validate&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiValidate&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;ngModel&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="k">void</span> <span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">)})})</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="k">void</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">)})})})</span><span class="o">:</span><span class="k">void</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">d</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">)}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">d</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">)})})}))}</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">{},</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiValidate</span><span class="p">);</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="nx">h</span><span class="p">}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">$value</span><span class="o">:</span><span class="nx">e</span><span class="p">});</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">then</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="p">)},</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">$formatters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$parsers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">)}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiValidateWatch</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiValidateWatch</span><span class="p">)))}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.utils&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.event&quot;</span><span class="p">,</span><span class="s2">&quot;ui.format&quot;</span><span class="p">,</span><span class="s2">&quot;ui.highlight&quot;</span><span class="p">,</span><span class="s2">&quot;ui.include&quot;</span><span class="p">,</span><span class="s2">&quot;ui.indeterminate&quot;</span><span class="p">,</span><span class="s2">&quot;ui.inflector&quot;</span><span class="p">,</span><span class="s2">&quot;ui.jq&quot;</span><span class="p">,</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">,</span><span class="s2">&quot;ui.mask&quot;</span><span class="p">,</span><span class="s2">&quot;ui.reset&quot;</span><span class="p">,</span><span class="s2">&quot;ui.route&quot;</span><span class="p">,</span><span class="s2">&quot;ui.scrollfix&quot;</span><span class="p">,</span><span class="s2">&quot;ui.scroll&quot;</span><span class="p">,</span><span class="s2">&quot;ui.scroll.jqlite&quot;</span><span class="p">,</span><span class="s2">&quot;ui.showhide&quot;</span><span class="p">,</span><span class="s2">&quot;ui.unique&quot;</span><span class="p">,</span><span class="s2">&quot;ui.validate&quot;</span><span class="p">]);</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.03921s from github-fe117-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/angular-ui/ui-utils/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

